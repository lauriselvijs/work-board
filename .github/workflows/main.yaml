name: Build and Test Docker Images
permissions:
  contents: read
  packages: write
on:
  push:
    branches: [main, 1.x]
  pull_request:
    branches: [main, 1.x]
env:
  COMMIT_HASH: ${{ github.sha }}
  APP_TEST_IMAGE: ghcr.io/${{ github.repository_owner }}/work-board-app-test:${{ github.sha }}
  APP_PROD_IMAGE: ghcr.io/${{ github.repository_owner }}/work-board-app-prod:${{ github.sha }}
  APP_PROD_IMAGE_LATEST: ghcr.io/${{ github.repository_owner }}/work-board-app-prod:latest

jobs:
  build:
    runs-on: ubuntu-latest
    name: Verify Docker Image Builds and Push to GHCR

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push app prod image with cache
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/production/Dockerfile
          push: true
          tags: ${{ env.APP_PROD_IMAGE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push app test image with cache
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/test/Dockerfile
          push: true
          tags: ${{ env.APP_TEST_IMAGE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test:
    runs-on: ubuntu-latest
    needs: build
    name: Run Tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull test images
        run: |
          docker pull $APP_TEST_IMAGE

      - name: Start docker containers
        run: docker compose -f docker-compose.test.yml up -d

      - name: Tests
        run: docker compose -f docker-compose.test.yml exec -T app php artisan test

      - name: Upload Screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: tests/Browser/screenshots

      - name: Upload Console Logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: console
          path: tests/Browser/console

      - name: Shut down containers
        if: always()
        run: docker compose -f docker-compose.test.yaml down

  post-build:
    runs-on: ubuntu-latest
    needs: test
    name: Push Final Production Image

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get commit hash
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull app production image
        run: |
          docker pull $APP_PROD_IMAGE

      - name: Tag image with commit hash
        run: |
          docker tag $APP_PROD_IMAGE ${{ env.APP_PROD_IMAGE_LATEST }}
      - name: Push new tag
        run: |
          docker push ${{ env.APP_PROD_IMAGE_LATEST }}

      - name: Cleanup production registry
        uses: actions/delete-package-versions@v5
        with:
          package-name: work-board-app-prod
          package-type: container
          min-versions-to-keep: 5

      - name: Cleanup test registry
        uses: actions/delete-package-versions@v5
        with:
          package-name: work-board-app-test
          package-type: container
          min-versions-to-keep: 5
